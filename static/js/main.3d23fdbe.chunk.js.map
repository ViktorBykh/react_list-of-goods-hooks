{"version":3,"sources":["SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortOrder","setSortOrder","reverseOrder","setReverseOrder","sortedGoods","goods","preparedGoods","sort","good1","good2","ALPHABETICALLY","localeCompare","BY_LENGTH","length","reverse","getPreparedGoods","className","type","onClick","RESET","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,2DAAAA,K,gCAAAA,E,qBAAAA,E,UAAAA,M,gBCKCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EA/BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAe1B,OAbIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAASc,eACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,UACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,EACKI,EAAcQ,UAGhBR,EAQHS,CAAiBlB,EAAiBG,EAAWE,GAEjD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWhB,IAAcJ,EAASc,eAC9B,iBACA,0BACJQ,QAAS,kBAAMjB,EAAaL,EAASc,iBALvC,iCAUA,wBACEO,KAAK,SACLD,UAAWhB,IAAcJ,EAASgB,UAC9B,oBACA,6BACJM,QAAS,kBAAMjB,EAAaL,EAASgB,YALvC,4BAUA,wBACEK,KAAK,SACLD,UAAWd,EACP,oBACA,6BACJgB,QAAS,kBAAMf,GAAiBD,IALlC,sBAUEF,GAAaE,IAEX,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAaL,EAASuB,OACtBhB,GAAgB,IALpB,sBAaN,6BACGC,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAAoBA,aCnG9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d23fdbe.chunk.js","sourcesContent":["export enum SortType {\n  ALPHABETICALLY = 'alphabetically',\n  BY_LENGTH = 'byLength',\n  RESET = '',\n}\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { SortType } from './SortType';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortOrder: string,\n  reverseOrder: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortOrder) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortOrder) {\n        case SortType.ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SortType.BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseOrder) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortOrder, setSortOrder] = useState('');\n  const [reverseOrder, setReverseOrder] = useState(false);\n\n  const sortedGoods\n    = getPreparedGoods(goodsFromServer, sortOrder, reverseOrder);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortOrder === SortType.ALPHABETICALLY\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => setSortOrder(SortType.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortOrder === SortType.BY_LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => setSortOrder(SortType.BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverseOrder\n            ? 'button is-warning'\n            : 'button is-warning is-light'}\n          onClick={() => setReverseOrder(!reverseOrder)}\n        >\n          Reverse\n        </button>\n\n        {(sortOrder || reverseOrder)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortOrder(SortType.RESET);\n                setReverseOrder(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}